name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: backend # 让代码拉取到 backend 目录

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Run Maven Build
        working-directory: backend
        run: |
          mvn clean install -DskipTests -B
          mkdir -p target/dependency
          JAR_FILE=$(ls target/*.jar | head -n 1)
          if [ -f "$JAR_FILE" ]; then
            cd target/dependency && unzip "$JAR_FILE"
          else
            echo "Error: No JAR file found in target/"
            exit 1
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Prepare Docker-Compose
        run: ls -l || echo "docker-compose.yml not found"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/234-deploylab-backend:latest

      - name: Ensure docker-compose.yml exists before copying
        run: |
          if [ -f "docker-compose.yml" ]; then
            echo "docker-compose.yml found, proceeding..."
          else
            echo "Error: docker-compose.yml not found!"
            exit 1
          fi

      - name: Copy docker-compose.yml to Remote Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/ubuntu/backend"

      - name: Deploy Application with Docker Compose
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/backend
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            docker compose down
            docker compose pull
            docker compose up -d
            rm -rf /home/ubuntu/backend
